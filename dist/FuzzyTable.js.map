{"version":3,"file":"FuzzyTable.js","sources":["../src/Fuse.js","../src/FuzzyTableSort.js","../src/FuzzyTableBody.js","../src/FuzzyTableStyles.js","../src/FuzzyTableHelper.js","../src/FuzzyTableFilters.js","../src/FuzzyTablePagination.js","../src/FuzzyTableSearch.js","../src/FuzzyTableDownloader.js","../src/FuzzyTableSizeSelect.js","../src/FuzzyTable.js"],"sourcesContent":["/**\n * Fuse.js v7.0.0 - Lightweight fuzzy-search (http://fusejs.io)\n *\n * Copyright (c) 2023 Kiro Risk (http://kiro.me)\n * All Rights Reserved. Apache Software License 2.0\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nfunction isArray(value) {\n    return !Array.isArray\n      ? getTag(value) === '[object Array]'\n      : Array.isArray(value)\n  }\n  \n  // Adapted from: https://github.com/lodash/lodash/blob/master/.internal/baseToString.js\n  const INFINITY = 1 / 0;\n  function baseToString(value) {\n    // Exit early for strings to avoid a performance hit in some environments.\n    if (typeof value === 'string') {\n      return value\n    }\n    let result = `${value}`;\n    return result === '0' && 1 / value === -INFINITY ? '-0' : result\n  }\n  \n  function toString(value) {\n    return value == null ? '' : baseToString(value)\n  }\n  \n  function isString(value) {\n    return typeof value === 'string'\n  }\n  \n  function isNumber(value) {\n    return typeof value === 'number'\n  }\n  \n  // Adapted from: https://github.com/lodash/lodash/blob/master/isBoolean.js\n  function isBoolean(value) {\n    return (\n      value === true ||\n      value === false ||\n      (isObjectLike(value) && getTag(value) === '[object Boolean]')\n    )\n  }\n  \n  function isObject(value) {\n    return typeof value === 'object'\n  }\n  \n  // Checks if `value` is object-like.\n  function isObjectLike(value) {\n    return isObject(value) && value !== null\n  }\n  \n  function isDefined(value) {\n    return value !== undefined && value !== null\n  }\n  \n  function isBlank(value) {\n    return !value.trim().length\n  }\n  \n  // Gets the `toStringTag` of `value`.\n  // Adapted from: https://github.com/lodash/lodash/blob/master/.internal/getTag.js\n  function getTag(value) {\n    return value == null\n      ? value === undefined\n        ? '[object Undefined]'\n        : '[object Null]'\n      : Object.prototype.toString.call(value)\n  }\n  \n  const EXTENDED_SEARCH_UNAVAILABLE = 'Extended search is not available';\n  \n  const INCORRECT_INDEX_TYPE = \"Incorrect 'index' type\";\n  \n  const LOGICAL_SEARCH_INVALID_QUERY_FOR_KEY = (key) =>\n    `Invalid value for key ${key}`;\n  \n  const PATTERN_LENGTH_TOO_LARGE = (max) =>\n    `Pattern length exceeds max of ${max}.`;\n  \n  const MISSING_KEY_PROPERTY = (name) => `Missing ${name} property in key`;\n  \n  const INVALID_KEY_WEIGHT_VALUE = (key) =>\n    `Property 'weight' in key '${key}' must be a positive integer`;\n  \n  const hasOwn = Object.prototype.hasOwnProperty;\n  \n  class KeyStore {\n    constructor(keys) {\n      this._keys = [];\n      this._keyMap = {};\n  \n      let totalWeight = 0;\n      for (const key of keys) {\n        let obj = createKey(key);\n        this._keys.push(obj);\n        this._keyMap[obj.id] = obj;\n        totalWeight += obj.weight;\n      }\n\n      for (const key of this._keys) {\n        key.weight /= totalWeight;\n      }\n    }\n    get(keyId) {\n      return this._keyMap[keyId]\n    }\n    keys() {\n      return this._keys\n    }\n    toJSON() {\n      return JSON.stringify(this._keys)\n    }\n  }\n  \n  function createKey(key) {\n    let path = null;\n    let id = null;\n    let src = null;\n    let weight = 1;\n    let getFn = null;\n  \n    if (isString(key) || isArray(key)) {\n      src = key;\n      path = createKeyPath(key);\n      id = createKeyId(key);\n    } else {\n      if (!hasOwn.call(key, 'name')) {\n        throw new Error(MISSING_KEY_PROPERTY('name'))\n      }\n  \n      const name = key.name;\n      src = name;\n  \n      if (hasOwn.call(key, 'weight')) {\n        weight = key.weight;\n  \n        if (weight <= 0) {\n          throw new Error(INVALID_KEY_WEIGHT_VALUE(name))\n        }\n      }\n  \n      path = createKeyPath(name);\n      id = createKeyId(name);\n      getFn = key.getFn;\n    }\n  \n    return { path, id, weight, src, getFn }\n  }\n  \n  function createKeyPath(key) {\n    return isArray(key) ? key : key.split('.')\n  }\n  \n  function createKeyId(key) {\n    return isArray(key) ? key.join('.') : key\n  }\n  \n  function get(obj, path) {\n    let list = [];\n    let arr = false;\n  \n    const deepGet = (obj, path, index) => {\n      if (!isDefined(obj)) {\n        return\n      }\n      if (!path[index]) {\n        // If there's no path left, we've arrived at the object we care about.\n        list.push(obj);\n      } else {\n        let key = path[index];\n  \n        const value = obj[key];\n  \n        if (!isDefined(value)) {\n          return\n        }\n  \n        // If we're at the last value in the path, and if it's a string/number/bool,\n        // add it to the list\n        if (\n          index === path.length - 1 &&\n          (isString(value) || isNumber(value) || isBoolean(value))\n        ) {\n          list.push(toString(value));\n        } else if (isArray(value)) {\n          arr = true;\n          // Search each item in the array.\n          for (let i = 0, len = value.length; i < len; i += 1) {\n            deepGet(value[i], path, index + 1);\n          }\n        } else if (path.length) {\n          // An object. Recurse further.\n          deepGet(value, path, index + 1);\n        }\n      }\n    };\n  \n    // Backwards compatibility (since path used to be a string)\n    deepGet(obj, isString(path) ? path.split('.') : path, 0);\n  \n    return arr ? list : list[0]\n  }\n  \n  const MatchOptions = {\n    // Whether the matches should be included in the result set. When `true`, each record in the result\n    // set will include the indices of the matched characters.\n    // These can consequently be used for highlighting purposes.\n    includeMatches: false,\n    // When `true`, the matching function will continue to the end of a search pattern even if\n    // a perfect match has already been located in the string.\n    findAllMatches: false,\n    // Minimum number of characters that must be matched before a result is considered a match\n    minMatchCharLength: 1\n  };\n  \n  const BasicOptions = {\n    // When `true`, the algorithm continues searching to the end of the input even if a perfect\n    // match is found before the end of the same input.\n    isCaseSensitive: false,\n    // When true, the matching function will continue to the end of a search pattern even if\n    includeScore: false,\n    // List of properties that will be searched. This also supports nested properties.\n    keys: [],\n    // Whether to sort the result list, by score\n    shouldSort: true,\n    // Default sort function: sort by ascending score, ascending index\n    sortFn: (a, b) =>\n      a.score === b.score ? (a.idx < b.idx ? -1 : 1) : a.score < b.score ? -1 : 1\n  };\n  \n  const FuzzyOptions = {\n    // Approximately where in the text is the pattern expected to be found?\n    location: 0,\n    // At what point does the match algorithm give up. A threshold of '0.0' requires a perfect match\n    // (of both letters and location), a threshold of '1.0' would match anything.\n    threshold: 0.6,\n    // Determines how close the match must be to the fuzzy location (specified above).\n    // An exact letter match which is 'distance' characters away from the fuzzy location\n    // would score as a complete mismatch. A distance of '0' requires the match be at\n    // the exact location specified, a threshold of '1000' would require a perfect match\n    // to be within 800 characters of the fuzzy location to be found using a 0.8 threshold.\n    distance: 100\n  };\n  \n  const AdvancedOptions = {\n    // When `true`, it enables the use of unix-like search commands\n    useExtendedSearch: false,\n    // The get function to use when fetching an object's properties.\n    // The default will search nested paths *ie foo.bar.baz*\n    getFn: get,\n    // When `true`, search will ignore `location` and `distance`, so it won't matter\n    // where in the string the pattern appears.\n    // More info: https://fusejs.io/concepts/scoring-theory.html#fuzziness-score\n    ignoreLocation: false,\n    // When `true`, the calculation for the relevance score (used for sorting) will\n    // ignore the field-length norm.\n    // More info: https://fusejs.io/concepts/scoring-theory.html#field-length-norm\n    ignoreFieldNorm: false,\n    // The weight to determine how much field length norm effects scoring.\n    fieldNormWeight: 1\n  };\n  \n  let Config = {\n    ...BasicOptions,\n    ...MatchOptions,\n    ...FuzzyOptions,\n    ...AdvancedOptions\n  };\n  \n  const SPACE = /[^ ]+/g;\n  \n  // Field-length norm: the shorter the field, the higher the weight.\n  // Set to 3 decimals to reduce index size.\n  function norm(weight = 1, mantissa = 3) {\n    const cache = new Map();\n    const m = 10 ** mantissa;\n  \n    return {\n      get(value) {\n        const numTokens = value.match(SPACE).length;\n  \n        if (cache.has(numTokens)) {\n          return cache.get(numTokens)\n        }\n  \n        // Default function is 1/sqrt(x), weight makes that variable\n        const norm = 1 / numTokens ** (0.5 * weight);\n  \n        // In place of `toFixed(mantissa)`, for faster computation\n        const n = Number.parseFloat(Math.round(norm * m) / m);\n  \n        cache.set(numTokens, n);\n  \n        return n\n      },\n      clear() {\n        cache.clear();\n      }\n    }\n  }\n  \n  class FuseIndex {\n    constructor({\n      getFn = Config.getFn,\n      fieldNormWeight = Config.fieldNormWeight\n    } = {}) {\n      this.norm = norm(fieldNormWeight, 3);\n      this.getFn = getFn;\n      this.isCreated = false;\n  \n      this.setIndexRecords();\n    }\n    setSources(docs = []) {\n      this.docs = docs;\n    }\n    setIndexRecords(records = []) {\n      this.records = records;\n    }\n    setKeys(keys = []) {\n      this.keys = keys;\n      this._keysMap = {};\n      keys.forEach((key, idx) => {\n        this._keysMap[key.id] = idx;\n      });\n    }\n    create() {\n      if (this.isCreated || !this.docs.length) {\n        return\n      }\n  \n      this.isCreated = true;\n  \n      // List is Array<String>\n      if (isString(this.docs[0])) {\n        this.docs.forEach((doc, docIndex) => {\n          this._addString(doc, docIndex);\n        });\n      } else {\n        // List is Array<Object>\n        this.docs.forEach((doc, docIndex) => {\n          this._addObject(doc, docIndex);\n        });\n      }\n  \n      this.norm.clear();\n    }\n    // Adds a doc to the end of the index\n    add(doc) {\n      const idx = this.size();\n  \n      if (isString(doc)) {\n        this._addString(doc, idx);\n      } else {\n        this._addObject(doc, idx);\n      }\n    }\n    // Removes the doc at the specified index of the index\n    removeAt(idx) {\n      this.records.splice(idx, 1);\n  \n      // Change ref index of every subsquent doc\n      for (let i = idx, len = this.size(); i < len; i += 1) {\n        this.records[i].i -= 1;\n      }\n    }\n    getValueForItemAtKeyId(item, keyId) {\n      return item[this._keysMap[keyId]]\n    }\n    size() {\n      return this.records.length\n    }\n    _addString(doc, docIndex) {\n      if (!isDefined(doc) || isBlank(doc)) {\n        return\n      }\n  \n      let record = {\n        v: doc,\n        i: docIndex,\n        n: this.norm.get(doc)\n      };\n  \n      this.records.push(record);\n    }\n    _addObject(doc, docIndex) {\n      let record = { i: docIndex, $: {} };\n  \n      // Iterate over every key (i.e, path), and fetch the value at that key\n      this.keys.forEach((key, keyIndex) => {\n        let value = key.getFn ? key.getFn(doc) : this.getFn(doc, key.path);\n  \n        if (!isDefined(value)) {\n          return\n        }\n  \n        if (isArray(value)) {\n          let subRecords = [];\n          const stack = [{ nestedArrIndex: -1, value }];\n  \n          while (stack.length) {\n            const { nestedArrIndex, value } = stack.pop();\n  \n            if (!isDefined(value)) {\n              continue\n            }\n  \n            if (isString(value) && !isBlank(value)) {\n              let subRecord = {\n                v: value,\n                i: nestedArrIndex,\n                n: this.norm.get(value)\n              };\n  \n              subRecords.push(subRecord);\n            } else if (isArray(value)) {\n              value.forEach((item, k) => {\n                stack.push({\n                  nestedArrIndex: k,\n                  value: item\n                });\n              });\n            } else ;\n          }\n          record.$[keyIndex] = subRecords;\n        } else if (isString(value) && !isBlank(value)) {\n          let subRecord = {\n            v: value,\n            n: this.norm.get(value)\n          };\n  \n          record.$[keyIndex] = subRecord;\n        }\n      });\n  \n      this.records.push(record);\n    }\n    toJSON() {\n      return {\n        keys: this.keys,\n        records: this.records\n      }\n    }\n  }\n  \n  function createIndex(\n    keys,\n    docs,\n    { getFn = Config.getFn, fieldNormWeight = Config.fieldNormWeight } = {}\n  ) {\n    const myIndex = new FuseIndex({ getFn, fieldNormWeight });\n    myIndex.setKeys(keys.map(createKey));\n    myIndex.setSources(docs);\n    myIndex.create();\n    return myIndex\n  }\n  \n  function parseIndex(\n    data,\n    { getFn = Config.getFn, fieldNormWeight = Config.fieldNormWeight } = {}\n  ) {\n    const { keys, records } = data;\n    const myIndex = new FuseIndex({ getFn, fieldNormWeight });\n    myIndex.setKeys(keys);\n    myIndex.setIndexRecords(records);\n    return myIndex\n  }\n  \n  function computeScore$1(\n    pattern,\n    {\n      errors = 0,\n      currentLocation = 0,\n      expectedLocation = 0,\n      distance = Config.distance,\n      ignoreLocation = Config.ignoreLocation\n    } = {}\n  ) {\n    const accuracy = errors / pattern.length;\n  \n    if (ignoreLocation) {\n      return accuracy\n    }\n  \n    const proximity = Math.abs(expectedLocation - currentLocation);\n  \n    if (!distance) {\n      // Dodge divide by zero error.\n      return proximity ? 1.0 : accuracy\n    }\n  \n    return accuracy + proximity / distance\n  }\n  \n  function convertMaskToIndices(\n    matchmask = [],\n    minMatchCharLength = Config.minMatchCharLength\n  ) {\n    let indices = [];\n    let start = -1;\n    let end = -1;\n    let i = 0;\n  \n    for (let len = matchmask.length; i < len; i += 1) {\n      let match = matchmask[i];\n      if (match && start === -1) {\n        start = i;\n      } else if (!match && start !== -1) {\n        end = i - 1;\n        if (end - start + 1 >= minMatchCharLength) {\n          indices.push([start, end]);\n        }\n        start = -1;\n      }\n    }\n  \n    // (i-1 - start) + 1 => i - start\n    if (matchmask[i - 1] && i - start >= minMatchCharLength) {\n      indices.push([start, i - 1]);\n    }\n  \n    return indices\n  }\n  \n  // Machine word size\n  const MAX_BITS = 32;\n  \n  function search(\n    text,\n    pattern,\n    patternAlphabet,\n    {\n      location = Config.location,\n      distance = Config.distance,\n      threshold = Config.threshold,\n      findAllMatches = Config.findAllMatches,\n      minMatchCharLength = Config.minMatchCharLength,\n      includeMatches = Config.includeMatches,\n      ignoreLocation = Config.ignoreLocation\n    } = {}\n  ) {\n    if (pattern.length > MAX_BITS) {\n      throw new Error(PATTERN_LENGTH_TOO_LARGE(MAX_BITS))\n    }\n  \n    const patternLen = pattern.length;\n    // Set starting location at beginning text and initialize the alphabet.\n    const textLen = text.length;\n    // Handle the case when location > text.length\n    const expectedLocation = Math.max(0, Math.min(location, textLen));\n    // Highest score beyond which we give up.\n    let currentThreshold = threshold;\n    // Is there a nearby exact match? (speedup)\n    let bestLocation = expectedLocation;\n  \n    // Performance: only computer matches when the minMatchCharLength > 1\n    // OR if `includeMatches` is true.\n    const computeMatches = minMatchCharLength > 1 || includeMatches;\n    // A mask of the matches, used for building the indices\n    const matchMask = computeMatches ? Array(textLen) : [];\n  \n    let index;\n  \n    // Get all exact matches, here for speed up\n    while ((index = text.indexOf(pattern, bestLocation)) > -1) {\n      let score = computeScore$1(pattern, {\n        currentLocation: index,\n        expectedLocation,\n        distance,\n        ignoreLocation\n      });\n  \n      currentThreshold = Math.min(score, currentThreshold);\n      bestLocation = index + patternLen;\n  \n      if (computeMatches) {\n        let i = 0;\n        while (i < patternLen) {\n          matchMask[index + i] = 1;\n          i += 1;\n        }\n      }\n    }\n  \n    // Reset the best location\n    bestLocation = -1;\n  \n    let lastBitArr = [];\n    let finalScore = 1;\n    let binMax = patternLen + textLen;\n  \n    const mask = 1 << (patternLen - 1);\n  \n    for (let i = 0; i < patternLen; i += 1) {\n      // Scan for the best match; each iteration allows for one more error.\n      // Run a binary search to determine how far from the match location we can stray\n      // at this error level.\n      let binMin = 0;\n      let binMid = binMax;\n  \n      while (binMin < binMid) {\n        const score = computeScore$1(pattern, {\n          errors: i,\n          currentLocation: expectedLocation + binMid,\n          expectedLocation,\n          distance,\n          ignoreLocation\n        });\n  \n        if (score <= currentThreshold) {\n          binMin = binMid;\n        } else {\n          binMax = binMid;\n        }\n  \n        binMid = Math.floor((binMax - binMin) / 2 + binMin);\n      }\n  \n      // Use the result from this iteration as the maximum for the next.\n      binMax = binMid;\n  \n      let start = Math.max(1, expectedLocation - binMid + 1);\n      let finish = findAllMatches\n        ? textLen\n        : Math.min(expectedLocation + binMid, textLen) + patternLen;\n  \n      // Initialize the bit array\n      let bitArr = Array(finish + 2);\n  \n      bitArr[finish + 1] = (1 << i) - 1;\n  \n      for (let j = finish; j >= start; j -= 1) {\n        let currentLocation = j - 1;\n        let charMatch = patternAlphabet[text.charAt(currentLocation)];\n  \n        if (computeMatches) {\n          // Speed up: quick bool to int conversion (i.e, `charMatch ? 1 : 0`)\n          matchMask[currentLocation] = +!!charMatch;\n        }\n  \n        // First pass: exact match\n        bitArr[j] = ((bitArr[j + 1] << 1) | 1) & charMatch;\n  \n        // Subsequent passes: fuzzy match\n        if (i) {\n          bitArr[j] |=\n            ((lastBitArr[j + 1] | lastBitArr[j]) << 1) | 1 | lastBitArr[j + 1];\n        }\n  \n        if (bitArr[j] & mask) {\n          finalScore = computeScore$1(pattern, {\n            errors: i,\n            currentLocation,\n            expectedLocation,\n            distance,\n            ignoreLocation\n          });\n  \n          // This match will almost certainly be better than any existing match.\n          // But check anyway.\n          if (finalScore <= currentThreshold) {\n            // Indeed it is\n            currentThreshold = finalScore;\n            bestLocation = currentLocation;\n  \n            // Already passed `loc`, downhill from here on in.\n            if (bestLocation <= expectedLocation) {\n              break\n            }\n  \n            // When passing `bestLocation`, don't exceed our current distance from `expectedLocation`.\n            start = Math.max(1, 2 * expectedLocation - bestLocation);\n          }\n        }\n      }\n  \n      // No hope for a (better) match at greater error levels.\n      const score = computeScore$1(pattern, {\n        errors: i + 1,\n        currentLocation: expectedLocation,\n        expectedLocation,\n        distance,\n        ignoreLocation\n      });\n  \n      if (score > currentThreshold) {\n        break\n      }\n  \n      lastBitArr = bitArr;\n    }\n  \n    const result = {\n      isMatch: bestLocation >= 0,\n      // Count exact matches (those with a score of 0) to be \"almost\" exact\n      score: Math.max(0.001, finalScore)\n    };\n  \n    if (computeMatches) {\n      const indices = convertMaskToIndices(matchMask, minMatchCharLength);\n      if (!indices.length) {\n        result.isMatch = false;\n      } else if (includeMatches) {\n        result.indices = indices;\n      }\n    }\n  \n    return result\n  }\n  \n  function createPatternAlphabet(pattern) {\n    let mask = {};\n  \n    for (let i = 0, len = pattern.length; i < len; i += 1) {\n      const char = pattern.charAt(i);\n      mask[char] = (mask[char] || 0) | (1 << (len - i - 1));\n    }\n  \n    return mask\n  }\n  \n  class BitapSearch {\n    constructor(\n      pattern,\n      {\n        location = Config.location,\n        threshold = Config.threshold,\n        distance = Config.distance,\n        includeMatches = Config.includeMatches,\n        findAllMatches = Config.findAllMatches,\n        minMatchCharLength = Config.minMatchCharLength,\n        isCaseSensitive = Config.isCaseSensitive,\n        ignoreLocation = Config.ignoreLocation\n      } = {}\n    ) {\n      this.options = {\n        location,\n        threshold,\n        distance,\n        includeMatches,\n        findAllMatches,\n        minMatchCharLength,\n        isCaseSensitive,\n        ignoreLocation\n      };\n  \n      this.pattern = isCaseSensitive ? pattern : pattern.toLowerCase();\n  \n      this.chunks = [];\n  \n      if (!this.pattern.length) {\n        return\n      }\n  \n      const addChunk = (pattern, startIndex) => {\n        this.chunks.push({\n          pattern,\n          alphabet: createPatternAlphabet(pattern),\n          startIndex\n        });\n      };\n  \n      const len = this.pattern.length;\n  \n      if (len > MAX_BITS) {\n        let i = 0;\n        const remainder = len % MAX_BITS;\n        const end = len - remainder;\n  \n        while (i < end) {\n          addChunk(this.pattern.substr(i, MAX_BITS), i);\n          i += MAX_BITS;\n        }\n  \n        if (remainder) {\n          const startIndex = len - MAX_BITS;\n          addChunk(this.pattern.substr(startIndex), startIndex);\n        }\n      } else {\n        addChunk(this.pattern, 0);\n      }\n    }\n  \n    searchIn(text) {\n      const { isCaseSensitive, includeMatches } = this.options;\n  \n      if (!isCaseSensitive) {\n        text = text.toLowerCase();\n      }\n  \n      // Exact match\n      if (this.pattern === text) {\n        let result = {\n          isMatch: true,\n          score: 0\n        };\n  \n        if (includeMatches) {\n          result.indices = [[0, text.length - 1]];\n        }\n  \n        return result\n      }\n  \n      // Otherwise, use Bitap algorithm\n      const {\n        location,\n        distance,\n        threshold,\n        findAllMatches,\n        minMatchCharLength,\n        ignoreLocation\n      } = this.options;\n  \n      let allIndices = [];\n      let totalScore = 0;\n      let hasMatches = false;\n  \n      this.chunks.forEach(({ pattern, alphabet, startIndex }) => {\n        const { isMatch, score, indices } = search(text, pattern, alphabet, {\n          location: location + startIndex,\n          distance,\n          threshold,\n          findAllMatches,\n          minMatchCharLength,\n          includeMatches,\n          ignoreLocation\n        });\n  \n        if (isMatch) {\n          hasMatches = true;\n        }\n  \n        totalScore += score;\n  \n        if (isMatch && indices) {\n          allIndices = [...allIndices, ...indices];\n        }\n      });\n  \n      let result = {\n        isMatch: hasMatches,\n        score: hasMatches ? totalScore / this.chunks.length : 1\n      };\n  \n      if (hasMatches && includeMatches) {\n        result.indices = allIndices;\n      }\n  \n      return result\n    }\n  }\n  \n  class BaseMatch {\n    constructor(pattern) {\n      this.pattern = pattern;\n    }\n    static isMultiMatch(pattern) {\n      return getMatch(pattern, this.multiRegex)\n    }\n    static isSingleMatch(pattern) {\n      return getMatch(pattern, this.singleRegex)\n    }\n    search(/*text*/) {}\n  }\n  \n  function getMatch(pattern, exp) {\n    const matches = pattern.match(exp);\n    return matches ? matches[1] : null\n  }\n  \n  // Token: 'file\n  \n  class ExactMatch extends BaseMatch {\n    constructor(pattern) {\n      super(pattern);\n    }\n    static get type() {\n      return 'exact'\n    }\n    static get multiRegex() {\n      return /^=\"(.*)\"$/\n    }\n    static get singleRegex() {\n      return /^=(.*)$/\n    }\n    search(text) {\n      const isMatch = text === this.pattern;\n  \n      return {\n        isMatch,\n        score: isMatch ? 0 : 1,\n        indices: [0, this.pattern.length - 1]\n      }\n    }\n  }\n  \n  // Token: !fire\n  \n  class InverseExactMatch extends BaseMatch {\n    constructor(pattern) {\n      super(pattern);\n    }\n    static get type() {\n      return 'inverse-exact'\n    }\n    static get multiRegex() {\n      return /^!\"(.*)\"$/\n    }\n    static get singleRegex() {\n      return /^!(.*)$/\n    }\n    search(text) {\n      const index = text.indexOf(this.pattern);\n      const isMatch = index === -1;\n  \n      return {\n        isMatch,\n        score: isMatch ? 0 : 1,\n        indices: [0, text.length - 1]\n      }\n    }\n  }\n  \n  // Token: ^file\n  \n  class PrefixExactMatch extends BaseMatch {\n    constructor(pattern) {\n      super(pattern);\n    }\n    static get type() {\n      return 'prefix-exact'\n    }\n    static get multiRegex() {\n      return /^\\^\"(.*)\"$/\n    }\n    static get singleRegex() {\n      return /^\\^(.*)$/\n    }\n    search(text) {\n      const isMatch = text.startsWith(this.pattern);\n  \n      return {\n        isMatch,\n        score: isMatch ? 0 : 1,\n        indices: [0, this.pattern.length - 1]\n      }\n    }\n  }\n  \n  // Token: !^fire\n  \n  class InversePrefixExactMatch extends BaseMatch {\n    constructor(pattern) {\n      super(pattern);\n    }\n    static get type() {\n      return 'inverse-prefix-exact'\n    }\n    static get multiRegex() {\n      return /^!\\^\"(.*)\"$/\n    }\n    static get singleRegex() {\n      return /^!\\^(.*)$/\n    }\n    search(text) {\n      const isMatch = !text.startsWith(this.pattern);\n  \n      return {\n        isMatch,\n        score: isMatch ? 0 : 1,\n        indices: [0, text.length - 1]\n      }\n    }\n  }\n  \n  // Token: .file$\n  \n  class SuffixExactMatch extends BaseMatch {\n    constructor(pattern) {\n      super(pattern);\n    }\n    static get type() {\n      return 'suffix-exact'\n    }\n    static get multiRegex() {\n      return /^\"(.*)\"\\$$/\n    }\n    static get singleRegex() {\n      return /^(.*)\\$$/\n    }\n    search(text) {\n      const isMatch = text.endsWith(this.pattern);\n  \n      return {\n        isMatch,\n        score: isMatch ? 0 : 1,\n        indices: [text.length - this.pattern.length, text.length - 1]\n      }\n    }\n  }\n  \n  // Token: !.file$\n  \n  class InverseSuffixExactMatch extends BaseMatch {\n    constructor(pattern) {\n      super(pattern);\n    }\n    static get type() {\n      return 'inverse-suffix-exact'\n    }\n    static get multiRegex() {\n      return /^!\"(.*)\"\\$$/\n    }\n    static get singleRegex() {\n      return /^!(.*)\\$$/\n    }\n    search(text) {\n      const isMatch = !text.endsWith(this.pattern);\n      return {\n        isMatch,\n        score: isMatch ? 0 : 1,\n        indices: [0, text.length - 1]\n      }\n    }\n  }\n  \n  class FuzzyMatch extends BaseMatch {\n    constructor(\n      pattern,\n      {\n        location = Config.location,\n        threshold = Config.threshold,\n        distance = Config.distance,\n        includeMatches = Config.includeMatches,\n        findAllMatches = Config.findAllMatches,\n        minMatchCharLength = Config.minMatchCharLength,\n        isCaseSensitive = Config.isCaseSensitive,\n        ignoreLocation = Config.ignoreLocation\n      } = {}\n    ) {\n      super(pattern);\n      this._bitapSearch = new BitapSearch(pattern, {\n        location,\n        threshold,\n        distance,\n        includeMatches,\n        findAllMatches,\n        minMatchCharLength,\n        isCaseSensitive,\n        ignoreLocation\n      });\n    }\n    static get type() {\n      return 'fuzzy'\n    }\n    static get multiRegex() {\n      return /^\"(.*)\"$/\n    }\n    static get singleRegex() {\n      return /^(.*)$/\n    }\n    search(text) {\n      return this._bitapSearch.searchIn(text)\n    }\n  }\n  \n  // Token: 'file\n  \n  class IncludeMatch extends BaseMatch {\n    constructor(pattern) {\n      super(pattern);\n    }\n    static get type() {\n      return 'include'\n    }\n    static get multiRegex() {\n      return /^'\"(.*)\"$/\n    }\n    static get singleRegex() {\n      return /^'(.*)$/\n    }\n    search(text) {\n      let location = 0;\n      let index;\n  \n      const indices = [];\n      const patternLen = this.pattern.length;\n  \n      // Get all exact matches\n      while ((index = text.indexOf(this.pattern, location)) > -1) {\n        location = index + patternLen;\n        indices.push([index, location - 1]);\n      }\n  \n      const isMatch = !!indices.length;\n  \n      return {\n        isMatch,\n        score: isMatch ? 0 : 1,\n        indices\n      }\n    }\n  }\n  \n  // ❗Order is important. DO NOT CHANGE.\n  const searchers = [\n    ExactMatch,\n    IncludeMatch,\n    PrefixExactMatch,\n    InversePrefixExactMatch,\n    InverseSuffixExactMatch,\n    SuffixExactMatch,\n    InverseExactMatch,\n    FuzzyMatch\n  ];\n  \n  const searchersLen = searchers.length;\n  \n  // Regex to split by spaces, but keep anything in quotes together\n  const SPACE_RE = / +(?=(?:[^\\\"]*\\\"[^\\\"]*\\\")*[^\\\"]*$)/;\n  const OR_TOKEN = '|';\n  \n  // Return a 2D array representation of the query, for simpler parsing.\n  // Example:\n  // \"^core go$ | rb$ | py$ xy$\" => [[\"^core\", \"go$\"], [\"rb$\"], [\"py$\", \"xy$\"]]\n  function parseQuery(pattern, options = {}) {\n    return pattern.split(OR_TOKEN).map((item) => {\n      let query = item\n        .trim()\n        .split(SPACE_RE)\n        .filter((item) => item && !!item.trim());\n  \n      let results = [];\n      for (let i = 0, len = query.length; i < len; i += 1) {\n        const queryItem = query[i];\n  \n        // 1. Handle multiple query match (i.e, once that are quoted, like `\"hello world\"`)\n        let found = false;\n        let idx = -1;\n        while (!found && ++idx < searchersLen) {\n          const searcher = searchers[idx];\n          let token = searcher.isMultiMatch(queryItem);\n          if (token) {\n            results.push(new searcher(token, options));\n            found = true;\n          }\n        }\n  \n        if (found) {\n          continue\n        }\n  \n        // 2. Handle single query matches (i.e, once that are *not* quoted)\n        idx = -1;\n        while (++idx < searchersLen) {\n          const searcher = searchers[idx];\n          let token = searcher.isSingleMatch(queryItem);\n          if (token) {\n            results.push(new searcher(token, options));\n            break\n          }\n        }\n      }\n  \n      return results\n    })\n  }\n  \n  // These extended matchers can return an array of matches, as opposed\n  // to a singl match\n  const MultiMatchSet = new Set([FuzzyMatch.type, IncludeMatch.type]);\n  \n  /**\n   * Command-like searching\n   * ======================\n   *\n   * Given multiple search terms delimited by spaces.e.g. `^jscript .python$ ruby !java`,\n   * search in a given text.\n   *\n   * Search syntax:\n   *\n   * | Token       | Match type                 | Description                            |\n   * | ----------- | -------------------------- | -------------------------------------- |\n   * | `jscript`   | fuzzy-match                | Items that fuzzy match `jscript`       |\n   * | `=scheme`   | exact-match                | Items that are `scheme`                |\n   * | `'python`   | include-match              | Items that include `python`            |\n   * | `!ruby`     | inverse-exact-match        | Items that do not include `ruby`       |\n   * | `^java`     | prefix-exact-match         | Items that start with `java`           |\n   * | `!^earlang` | inverse-prefix-exact-match | Items that do not start with `earlang` |\n   * | `.js$`      | suffix-exact-match         | Items that end with `.js`              |\n   * | `!.go$`     | inverse-suffix-exact-match | Items that do not end with `.go`       |\n   *\n   * A single pipe character acts as an OR operator. For example, the following\n   * query matches entries that start with `core` and end with either`go`, `rb`,\n   * or`py`.\n   *\n   * ```\n   * ^core go$ | rb$ | py$\n   * ```\n   */\n  class ExtendedSearch {\n    constructor(\n      pattern,\n      {\n        isCaseSensitive = Config.isCaseSensitive,\n        includeMatches = Config.includeMatches,\n        minMatchCharLength = Config.minMatchCharLength,\n        ignoreLocation = Config.ignoreLocation,\n        findAllMatches = Config.findAllMatches,\n        location = Config.location,\n        threshold = Config.threshold,\n        distance = Config.distance\n      } = {}\n    ) {\n      this.query = null;\n      this.options = {\n        isCaseSensitive,\n        includeMatches,\n        minMatchCharLength,\n        findAllMatches,\n        ignoreLocation,\n        location,\n        threshold,\n        distance\n      };\n  \n      this.pattern = isCaseSensitive ? pattern : pattern.toLowerCase();\n      this.query = parseQuery(this.pattern, this.options);\n    }\n  \n    static condition(_, options) {\n      return options.useExtendedSearch\n    }\n  \n    searchIn(text) {\n      const query = this.query;\n  \n      if (!query) {\n        return {\n          isMatch: false,\n          score: 1\n        }\n      }\n  \n      const { includeMatches, isCaseSensitive } = this.options;\n  \n      text = isCaseSensitive ? text : text.toLowerCase();\n  \n      let numMatches = 0;\n      let allIndices = [];\n      let totalScore = 0;\n  \n      // ORs\n      for (let i = 0, qLen = query.length; i < qLen; i += 1) {\n        const searchers = query[i];\n  \n        // Reset indices\n        allIndices.length = 0;\n        numMatches = 0;\n  \n        // ANDs\n        for (let j = 0, pLen = searchers.length; j < pLen; j += 1) {\n          const searcher = searchers[j];\n          const { isMatch, indices, score } = searcher.search(text);\n  \n          if (isMatch) {\n            numMatches += 1;\n            totalScore += score;\n            if (includeMatches) {\n              const type = searcher.constructor.type;\n              if (MultiMatchSet.has(type)) {\n                allIndices = [...allIndices, ...indices];\n              } else {\n                allIndices.push(indices);\n              }\n            }\n          } else {\n            totalScore = 0;\n            numMatches = 0;\n            allIndices.length = 0;\n            break\n          }\n        }\n  \n        // OR condition, so if TRUE, return\n        if (numMatches) {\n          let result = {\n            isMatch: true,\n            score: totalScore / numMatches\n          };\n  \n          if (includeMatches) {\n            result.indices = allIndices;\n          }\n  \n          return result\n        }\n      }\n  \n      // Nothing was matched\n      return {\n        isMatch: false,\n        score: 1\n      }\n    }\n  }\n  \n  const registeredSearchers = [];\n  \n  function register(...args) {\n    registeredSearchers.push(...args);\n  }\n  \n  function createSearcher(pattern, options) {\n    for (let i = 0, len = registeredSearchers.length; i < len; i += 1) {\n      let searcherClass = registeredSearchers[i];\n      if (searcherClass.condition(pattern, options)) {\n        return new searcherClass(pattern, options)\n      }\n    }\n  \n    return new BitapSearch(pattern, options)\n  }\n  \n  const LogicalOperator = {\n    AND: '$and',\n    OR: '$or'\n  };\n  \n  const KeyType = {\n    PATH: '$path',\n    PATTERN: '$val'\n  };\n  \n  const isExpression = (query) =>\n    !!(query[LogicalOperator.AND] || query[LogicalOperator.OR]);\n  \n  const isPath = (query) => !!query[KeyType.PATH];\n  \n  const isLeaf = (query) =>\n    !isArray(query) && isObject(query) && !isExpression(query);\n  \n  const convertToExplicit = (query) => ({\n    [LogicalOperator.AND]: Object.keys(query).map((key) => ({\n      [key]: query[key]\n    }))\n  });\n  \n  // When `auto` is `true`, the parse function will infer and initialize and add\n  // the appropriate `Searcher` instance\n  function parse(query, options, { auto = true } = {}) {\n    const next = (query) => {\n      let keys = Object.keys(query);\n  \n      const isQueryPath = isPath(query);\n  \n      if (!isQueryPath && keys.length > 1 && !isExpression(query)) {\n        return next(convertToExplicit(query))\n      }\n  \n      if (isLeaf(query)) {\n        const key = isQueryPath ? query[KeyType.PATH] : keys[0];\n  \n        const pattern = isQueryPath ? query[KeyType.PATTERN] : query[key];\n  \n        if (!isString(pattern)) {\n          throw new Error(LOGICAL_SEARCH_INVALID_QUERY_FOR_KEY(key))\n        }\n  \n        const obj = {\n          keyId: createKeyId(key),\n          pattern\n        };\n  \n        if (auto) {\n          obj.searcher = createSearcher(pattern, options);\n        }\n  \n        return obj\n      }\n  \n      let node = {\n        children: [],\n        operator: keys[0]\n      };\n  \n      keys.forEach((key) => {\n        const value = query[key];\n  \n        if (isArray(value)) {\n          value.forEach((item) => {\n            node.children.push(next(item));\n          });\n        }\n      });\n  \n      return node\n    };\n  \n    if (!isExpression(query)) {\n      query = convertToExplicit(query);\n    }\n  \n    return next(query)\n  }\n  \n  // Practical scoring function\n  function computeScore(\n    results,\n    { ignoreFieldNorm = Config.ignoreFieldNorm }\n  ) {\n    results.forEach((result) => {\n      let totalScore = 1;\n  \n      result.matches.forEach(({ key, norm, score }) => {\n        const weight = key ? key.weight : null;\n  \n        totalScore *= Math.pow(\n          score === 0 && weight ? Number.EPSILON : score,\n          (weight || 1) * (ignoreFieldNorm ? 1 : norm)\n        );\n      });\n  \n      result.score = totalScore;\n    });\n  }\n  \n  function transformMatches(result, data) {\n    const matches = result.matches;\n    data.matches = [];\n  \n    if (!isDefined(matches)) {\n      return\n    }\n  \n    matches.forEach((match) => {\n      if (!isDefined(match.indices) || !match.indices.length) {\n        return\n      }\n  \n      const { indices, value } = match;\n  \n      let obj = {\n        indices,\n        value\n      };\n  \n      if (match.key) {\n        obj.key = match.key.src;\n      }\n  \n      if (match.idx > -1) {\n        obj.refIndex = match.idx;\n      }\n  \n      data.matches.push(obj);\n    });\n  }\n  \n  function transformScore(result, data) {\n    data.score = result.score;\n  }\n  \n  function format(\n    results,\n    docs,\n    {\n      includeMatches = Config.includeMatches,\n      includeScore = Config.includeScore\n    } = {}\n  ) {\n    const transformers = [];\n  \n    if (includeMatches) transformers.push(transformMatches);\n    if (includeScore) transformers.push(transformScore);\n  \n    return results.map((result) => {\n      const { idx } = result;\n  \n      const data = {\n        item: docs[idx],\n        refIndex: idx\n      };\n  \n      if (transformers.length) {\n        transformers.forEach((transformer) => {\n          transformer(result, data);\n        });\n      }\n  \n      return data\n    })\n  }\n  \n  class Fuse {\n    constructor(docs, options = {}, index) {\n      this.options = { ...Config, ...options };\n  \n      if (\n        this.options.useExtendedSearch &&\n        !true\n      ) {\n        throw new Error(EXTENDED_SEARCH_UNAVAILABLE)\n      }\n  \n      this._keyStore = new KeyStore(this.options.keys);\n  \n      this.setCollection(docs, index);\n    }\n  \n    setCollection(docs, index) {\n      this._docs = docs;\n  \n      if (index && !(index instanceof FuseIndex)) {\n        throw new Error(INCORRECT_INDEX_TYPE)\n      }\n  \n      this._myIndex =\n        index ||\n        createIndex(this.options.keys, this._docs, {\n          getFn: this.options.getFn,\n          fieldNormWeight: this.options.fieldNormWeight\n        });\n    }\n  \n    add(doc) {\n      if (!isDefined(doc)) {\n        return\n      }\n  \n      this._docs.push(doc);\n      this._myIndex.add(doc);\n    }\n  \n    remove(predicate = (/* doc, idx */) => false) {\n      const results = [];\n  \n      for (let i = 0, len = this._docs.length; i < len; i += 1) {\n        const doc = this._docs[i];\n        if (predicate(doc, i)) {\n          this.removeAt(i);\n          i -= 1;\n          len -= 1;\n  \n          results.push(doc);\n        }\n      }\n  \n      return results\n    }\n  \n    removeAt(idx) {\n      this._docs.splice(idx, 1);\n      this._myIndex.removeAt(idx);\n    }\n  \n    getIndex() {\n      return this._myIndex\n    }\n  \n    search(query, { limit = -1 } = {}) {\n      const {\n        includeMatches,\n        includeScore,\n        shouldSort,\n        sortFn,\n        ignoreFieldNorm\n      } = this.options;\n  \n      let results = isString(query)\n        ? isString(this._docs[0])\n          ? this._searchStringList(query)\n          : this._searchObjectList(query)\n        : this._searchLogical(query);\n  \n      computeScore(results, { ignoreFieldNorm });\n  \n      if (shouldSort) {\n        results.sort(sortFn);\n      }\n  \n      if (isNumber(limit) && limit > -1) {\n        results = results.slice(0, limit);\n      }\n  \n      return format(results, this._docs, {\n        includeMatches,\n        includeScore\n      })\n    }\n  \n    _searchStringList(query) {\n      const searcher = createSearcher(query, this.options);\n      const { records } = this._myIndex;\n      const results = [];\n  \n      // Iterate over every string in the index\n      records.forEach(({ v: text, i: idx, n: norm }) => {\n        if (!isDefined(text)) {\n          return\n        }\n  \n        const { isMatch, score, indices } = searcher.searchIn(text);\n  \n        if (isMatch) {\n          results.push({\n            item: text,\n            idx,\n            matches: [{ score, value: text, norm, indices }]\n          });\n        }\n      });\n  \n      return results\n    }\n  \n    _searchLogical(query) {\n  \n      const expression = parse(query, this.options);\n  \n      const evaluate = (node, item, idx) => {\n        if (!node.children) {\n          const { keyId, searcher } = node;\n  \n          const matches = this._findMatches({\n            key: this._keyStore.get(keyId),\n            value: this._myIndex.getValueForItemAtKeyId(item, keyId),\n            searcher\n          });\n  \n          if (matches && matches.length) {\n            return [\n              {\n                idx,\n                item,\n                matches\n              }\n            ]\n          }\n  \n          return []\n        }\n  \n        const res = [];\n        for (let i = 0, len = node.children.length; i < len; i += 1) {\n          const child = node.children[i];\n          const result = evaluate(child, item, idx);\n          if (result.length) {\n            res.push(...result);\n          } else if (node.operator === LogicalOperator.AND) {\n            return []\n          }\n        }\n        return res\n      };\n  \n      const records = this._myIndex.records;\n      const resultMap = {};\n      const results = [];\n  \n      records.forEach(({ $: item, i: idx }) => {\n        if (isDefined(item)) {\n          let expResults = evaluate(expression, item, idx);\n  \n          if (expResults.length) {\n            // Dedupe when adding\n            if (!resultMap[idx]) {\n              resultMap[idx] = { idx, item, matches: [] };\n              results.push(resultMap[idx]);\n            }\n            expResults.forEach(({ matches }) => {\n              resultMap[idx].matches.push(...matches);\n            });\n          }\n        }\n      });\n  \n      return results\n    }\n  \n    _searchObjectList(query) {\n      const searcher = createSearcher(query, this.options);\n      const { keys, records } = this._myIndex;\n      const results = [];\n  \n      // List is Array<Object>\n      records.forEach(({ $: item, i: idx }) => {\n        if (!isDefined(item)) {\n          return\n        }\n  \n        let matches = [];\n  \n        // Iterate over every key (i.e, path), and fetch the value at that key\n        keys.forEach((key, keyIndex) => {\n          matches.push(\n            ...this._findMatches({\n              key,\n              value: item[keyIndex],\n              searcher\n            })\n          );\n        });\n  \n        if (matches.length) {\n          results.push({\n            idx,\n            item,\n            matches\n          });\n        }\n      });\n  \n      return results\n    }\n    _findMatches({ key, value, searcher }) {\n      if (!isDefined(value)) {\n        return []\n      }\n  \n      let matches = [];\n  \n      if (isArray(value)) {\n        value.forEach(({ v: text, i: idx, n: norm }) => {\n          if (!isDefined(text)) {\n            return\n          }\n  \n          const { isMatch, score, indices } = searcher.searchIn(text);\n  \n          if (isMatch) {\n            matches.push({\n              score,\n              key,\n              value: text,\n              idx,\n              norm,\n              indices\n            });\n          }\n        });\n      } else {\n        const { v: text, n: norm } = value;\n  \n        const { isMatch, score, indices } = searcher.searchIn(text);\n  \n        if (isMatch) {\n          matches.push({ score, key, value: text, norm, indices });\n        }\n      }\n  \n      return matches\n    }\n  }\n  \n  Fuse.version = '7.0.0';\n  Fuse.createIndex = createIndex;\n  Fuse.parseIndex = parseIndex;\n  Fuse.config = Config;\n  \n  {\n    Fuse.parseQuery = parse;\n  }\n  \n  {\n    register(ExtendedSearch);\n  }\n  \n  export { Fuse as default };","/**\n * Sorts the data table in the given context based on the specified column.\n * It toggles the sorting order for the column between ascending and descending.\n * The sorting behavior varies depending on the data type of the column (integer or string).\n *\n * @param {Object} context - The context containing the table to be sorted and sorting states.\n * @param {Object} column - The column definition based on which the table should be sorted.\n * @param {string} column.id - The identifier of the column used for sorting.\n * @param {string} column.type - The data type of the column (e.g., 'int' for integers).\n * @returns {Array} The sorted array from the context's table.\n */\nexport function sort(context, column) {\n    const id = column.id;\n    const isDescending = context.sortedCol === id;\n    context.sortedCol = isDescending ? \"\" : id; // Toggle sorted column\n\n    if (column.type === \"int\" || column.type === \"year\" || column.type === \"bool\") {\n        return context.table.sort((a, b) => {\n            const valA = a[id] !== undefined && a[id] !== null ? Number(a[id]) : -Infinity;\n            const valB = b[id] !== undefined && b[id] !== null ? Number(b[id]) : -Infinity;\n            return isDescending ? valB - valA : valA - valB;\n        });\n    }\n\n    return context.table.sort((a, b) => {\n        const current = a[id] ?? \"\";\n        const next = b[id] ?? \"\";\n        return isDescending ? next.localeCompare(current) : current.localeCompare(next);\n    });\n}","\n/**\n * Dynamically creates and populates a table body (`tbody`) with data and elements based on the provided context and \n * table head definitions. It handles pagination, text formatting, and optional linking and icons for each cell.\n * \n * @param {Object} context - The FuzzyTable\n * @param {HTMLElement} tbody - The table body element where rows will be appended.\n */\nexport const createTbody = (context, tbody) => {\n    const calculateRange = (page, size) => [(page + 1) * size - size, (page + 1) * size];\n    const [start, end] = calculateRange(context.currentPage, context.size);\n    const tableSlice = context.table.slice(start, end);\n\n    tbody.innerHTML = '';\n    let rowIndex = start + 1;\n    \n    for (const row of tableSlice) {\n        const tr = document.createElement('tr');\n        tr.className = context.classes.tr;\n\n        if (context.numberCol) {\n            const numTd = document.createElement('td');\n            numTd.className = `${context.classes.tableColumn ?? ''} number-column`;\n            numTd.textContent = rowIndex++;\n            tr.appendChild(numTd);\n        }\n\n        for (const column of context.head) {\n            const td = document.createElement('td');\n            td.className = `${column.class ?? ''} ${column.id} ${context.classes.tableColumn ?? ''}`;\n            if(column.type) {\n                td.setAttribute('data-type', column.type);\n            }\n            const cellValue = row[column.id] ?? '';\n            const formattedValue = formatCellContent(context, cellValue, column.type, context.locale);\n            const content = new DocumentFragment();\n            if (column.icon) {\n                content.appendChild(createSVG(column.icon, row[column.icon.id] ?? ''));\n            }\n            if(column.img) {\n                content.appendChild(createImg(column.img, row[column.img.id] ?? ''));\n            }\n            content.appendChild(document.createTextNode(formattedValue));\n            if(column.subtitle) {\n                const subtitle  = document.createElement('em')\n                subtitle.className = context.classes.tableCellSubtitle;\n                subtitle.innerText = row[column.subtitle] ?? ''\n                content.appendChild(subtitle);\n            }\n            if (column.link) {\n                const a = document.createElement('a')\n                a.className = context.classes.tableCellLink\n                a.href = `${column.link.base ? column.link.base : ''}${row[column.link.id]}`\n                a.target = column.link.target ?? '_self'\n                a.appendChild(content)\n                td.appendChild(a)\n            } else {\n                td.appendChild(content)\n            }\n            if (column.suffix && cellValue !== '') {\n                td.appendChild(context.safeHtml(column.suffix))\n            }\n            if(column.hideZeros && cellValue === 0) {\n                td.classList.add(\"hidden\");\n            }\n            tr.appendChild(td);\n        }\n        tbody.appendChild(tr);\n    }\n}\n\nexport const createSVG = (icon, value) => {\n    const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    const use = document.createElementNS('http://www.w3.org/2000/svg', 'use');\n    use.setAttribute('href', `${icon.base}${value}`);\n    use.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', `#${value}`);\n    if(icon.class) {\n        svg.setAttribute('class', icon.class);    \n    }\n    svg.appendChild(use);\n    return svg;\n};\n\nconst createImg = (img, value) => {\n    const imgEl = document.createElement('img');\n    imgEl.setAttribute('src', `${img.base}${value}${img.ext ?? ''}`);\n    if(img.class) {\n        imgEl.setAttribute('class', img.class);        \n    }\n    return imgEl;\n}\n\nconst formatCellContent = (context, cellValue, type, locale) => {\n    if(cellValue == '' || typeof cellValue == undefined) {\n        return ''\n    }\n    if (type === 'int') {\n        return new Intl.NumberFormat(locale).format(cellValue);\n    }\n    if (type === 'date' || type === 'year') {\n        if (type === 'date') {\n            const date = new Date(cellValue);\n            return new Intl.DateTimeFormat(locale).format(date);\n        } else if (type === 'year') {\n            const date = new Date(cellValue,0, 1);\n            return new Intl.DateTimeFormat(locale, { year: 'numeric' }).format(date);\n        }\n    }\n    if (type === 'bool') {\n        return (cellValue) ? context.checkMark : context.xMark\n    }\n\n    return cellValue;\n};\n","const defaultClasses = {\n    pagination: '',\n    sortArrow: '',\n    arrowUp: 'absolute right-2 top-1.5 text-sm',\n    arrowDown: 'absolute right-2 bottom-1.5 text-sm',\n    paginationButton: 'w-auto h-10 px-4 inline-flex justify-center items-center border dark:border-stone-900',\n    paginationButtonCurrent: 'text-lg font-bold text-[#F8BB39]',\n    paginationNav: 'relative z-0 flex mt-4 justify-center rounded-md -space-x-px dark:text-[#f8f8f0]',\n    paginationDescription: 'text-center my-2 dark:text-[#f8f8f0] text-xs',\n    paginationDescriptionStart: 'text-[#F8BB39] text-xs',\n    paginationDescriptionEnd: 'text-[#F8BB39] text-xs',\n    paginationDescriptionTotal: 'text-[#F8BB39] text-xs',\n    paginationNav: '',\n    paginationTopArrow: 'relative inline-flex justify-row items-center bg-white dark:bg-stone-700 px-2 h-12 dark:text-[#f8f8f0] focus:z-10',\n    paginationTopSlash: 'px-1',\n    topPaginationNav: 'relative flex items-center h-12 text-sm border-r-2 border-stone-200 dark:border-stone-950 dark:bg-stone-700 text-stone-800 dark:text-stone-300 placeholder-stone-800 dark:placeholder-stone-100',\n    topPaginationCurrent: 'flex flex-row text-sm font-bold text-center whitespace-no-wrap px-2',\n    downloadWrapper: 'relative border-r-2 border-stone-200 dark:border-stone-950',\n    downloadButton: 'relative inline-flex items-center bg-white dark:bg-stone-700 px-2 h-12 dark:text-[#f8f8f0] focus:z-10',\n    downloadDropdown: 'absolute left-0 z-50 -mr-1 mt-2 w-56 origin-top-right rounded-md bg-white dark:bg-stone-800 shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none',\n    downloadDropdownButton: 'text-stone-700 dark:text-[#f8f8f0] hover:dark:bg-stone-900 hover:bg-stone-200 w-full block px-4 py-2 text-sm text-left',\n    downloadDropdownInfo: 'text-center text-xs text-stone-700 dark:text-[#f8f8f0] py-2',\n    fieldsetWrap: 'block mt-8 w-full bg-gray-200 dark:bg-stone-700 text-sm font-semibold p-3 text-stone-900 dark:text-[#f8f8f0] border-b border-stone-200 dark:border-stone-500 rounded-t-lg',\n    fieldsetFilterWrap: 'mb-4 dark:bg-stone-900 border border-stone-200 dark:border-stone-950 p-2',\n    fieldset: 'mb-4 dark:bg-stone-900 border border-stone-200 dark:border-stone-950 p-2',\n    filterContainer: 'hidden sm:flex flex-col lg:w-1/5 ltr:mr-4 rtl:ml-4',\n    filterButton: 'text-sm relative px-2 py-1 my-2 w-full flex flex-row justify-center cursor-pointer rounded-lg border dark:text-[#f8f8f0] dark:bg-stone-800 border-stone-200 dark:border-stone-500 shadow-sm',\n    filterButtonActive: 'bg-stone-400 dark:bg-stone-950 text-white border-stone-800',\n    tableContainer: 'flex flex-col w-full relative z-10 max-w-7xl mx-auto',\n    tableColumn: 'whitespace-nowrap px-3 py-2 text-sm text-stone-800 dark:text-[#f8f8f0] border border-stone-200 dark:border-stone-800 relative truncate max-w-[240px]',\n    searchInput: 'relative indent-6 block w-full h-12 px-4 text-sm dark:bg-stone-700 text-stone-800 dark:text-stone-300 placeholder-stone-800 dark:placeholder-stone-100 ltr:rounded-tl-xl rtl:rounded-tr-xl',\n    searchIcon: 'absolute block w-6 h-6 z-30 mt-3 mx-2 text-white',\n    searchWrapper: 'w-full h-12 flex-shrink border-r-2 border-stone-200 dark:border-stone-950',\n    sizeSelectContainer: 'h-12 w-36 relative',\n    sizeSelect: 'appearance-none w-full h-full bg-white dark:bg-stone-700 dark:text-[#f8f8f0] text-center rtl:rounded-tl-lg ltr:rounded-tr-lg',\n    tableHeader: 'flex flex-row mt-8 mb-0.5 h-12',\n    tableCellLink: 'text-[#F8BB39]',\n    table: 'w-full',\n    thead: 'bg-stone-100 dark:bg-stone-700',\n    tbody: 'divide-y divide-stone-200 dark:divide-stone-800 bg-white dark:bg-stone-800 border border-stone-500 dark:border-none',\n    th: 'relative px-1 py-3 rtl:pr-7 ltr:text-left rtl:text-right text-sm font-semibold text-stone-900 dark:text-[#f8f8f0] cursor-pointer',\n    tr: 'dark:even:bg-stone-900',\n    td: 'whitespace-nowrap px-3 py-2 text-sm text-stone-800 dark:text-[#f8f8f0] border border-stone-200 dark:border-stone-800 relative truncate max-w-[240px]',\n};\n\n/**\n * Merges custom CSS class definitions with a set of default classes. If a key in the custom classes starts\n * with an underscore, it will overwrite the corresponding default class after removing the underscore.\n * Keys without an underscore will simply merge by replacing the existing default with the custom class.\n *\n * @param {Object} customClasses - An object containing custom class definitions. Keys starting with\n *                                 an underscore indicate classes that should overwrite default classes.\n * @returns {Object} An object containing the merged classes.\n */\nexport const mergeClasses = (customClasses = {}) => {\n    const mergedClasses = { ...defaultClasses };\n    for (const key of Object.keys(customClasses)) {\n        if (key.startsWith('_')) {\n            mergedClasses[key.substring(1)] = customClasses[key];\n        } else {\n            mergedClasses[key] = customClasses[key];\n        }\n    }\n\n    return mergedClasses;\n};\n","export function elem(tag, props = {}) {\n    const el = document.createElement(tag);\n    for (const [key, val] of Object.entries(props)) {\n        if (key === 'style' && typeof val === 'object') {\n            Object.assign(el.style, val);\n        } else {\n            el[key] = val;\n        }\n    }\n    return el;\n}","import Fuse from './Fuse.js'\nimport { elem } from './FuzzyTableHelper.js';\nimport {createSVG} from './FuzzyTableBody.js'\n\n/**\n * Initializes filter elements based on the provided context and appends them to the context's container.\n * Only executes if there are filters defined in the context.\n * \n * @param {Object} context - The configuration object that includes the container and filters data.\n * @param {HTMLElement} context.container - The DOM element to append the filter container.\n * @param {Array} context.filters - Array of filter definitions.\n */\nexport function createFilters(context) {\n    if (context.aside) {\n      const asideContainer = elem('aside', { innerHTML: context.aside });\n      context.container.appendChild(asideContainer);\n    }\n    if (context.filters.length > 0) {\n      const filterContainer = elem('div', {\n        className: context.classes.filterContainer,\n        id: 'fuzzy_filters'\n      });\n      context.filters.forEach((filter, filterKey) => {\n        const filterName = elem('div', {\n          className: context.classes.fieldsetWrap,\n          textContent: filter.name\n        });\n        filterContainer.appendChild(filterName);\n        const fieldset = createFilterFieldset(filter, filterKey, applyFilters, context);\n        filterContainer.appendChild(fieldset);\n      });\n  \n      context.container.appendChild(filterContainer);\n    }\n  }\n\n/**\n * Creates a button for a specific filter option.\n * \n * @param {Object} classes - An object containing class names for styling.\n * @param {Object} option - The filter option object containing the title and active state.\n * @param {Function} onClick - The function to execute when the button is clicked.\n * @returns {HTMLElement} The constructed button element.\n */\nfunction createFilterButton(filter, classes, option, onClick) {\n\n  const filterFragment = document.createDocumentFragment();\n\n  if (filter.icon) {\n    filterFragment.appendChild(createSVG(filter.icon, option.code ?? ''));\n  }\n  \n  filterFragment.appendChild(document.createTextNode(option.title ?? ''));\n  const buttonEl = elem('button', {\n    className: `${classes.filterButton} ${option.active ? classes.filterButtonActive : ''}`,\n    onclick: onClick\n  });\n\n    buttonEl.appendChild(filterFragment);\n    return buttonEl;\n}\n\n/**\n * Creates a fieldset containing buttons for each option of a specific filter.\n * \n * @param {Object} filter - The filter object containing options to create buttons for.\n * @param {Number} filterKey - The index of the filter in the filters array.\n * @param {Function} applyFilters - The callback function to apply filters.\n * @param {Object} context - The context for global configurations and states.\n * @returns {HTMLElement} The constructed fieldset element.\n */\nfunction createFilterFieldset(filter, filterKey, applyFilters, context) {\n    const fieldset = elem('fieldset', { className: context.classes.fieldset });\n    filter.options.forEach((option, optionKey) => {\n      const button = createFilterButton(\n        filter,\n        context.classes,\n        option,\n        () => applyFilters(context, filterKey, optionKey)\n      );\n      fieldset.appendChild(button);\n    });\n    return fieldset;\n  }\n\n/**\n * Applies the specified filter option and updates the table and filter UI accordingly.\n * \n * @param {Object} c - The context containing the current data, filters, and configuration.\n * @param {Number} filterKey - The index of the current filter in the filters array.\n * @param {Number} optionKey - The index of the current option in the filter's options array.\n */\nexport function applyFilters(c, filterKey, optionKey) {\n  let tempTable = c.data;\n\n  c.filters[filterKey].options[optionKey].active = c.filters[filterKey].options[optionKey].values !== \"\";\n\n  if (c.filters[filterKey].filterType === \"radio\") {\n    c.filters[filterKey].options.forEach((option, i) => {\n      if (i !== optionKey) {\n        option.active = false;\n      }\n    });\n  }\n\n  for (const filter of c.filters) {\n    const activeOptions = filter.options.filter((opt) => opt.active);\n    for (const option of activeOptions) {\n      tempTable = tempTable.filter((row) => {\n        const match = option.value.test(row[filter.filterColumn]);\n        return option.inverse ? !match : match;\n      });\n    }\n  }\n\n  c.currentPage = 0;\n  c.table = tempTable;\n  c.updateTable();\n\n  c.fuse = new Fuse(c.table, {\n    shouldSort: true,\n    includeMatches: true,\n    threshold: 0.3,\n    location: 0,\n    distance: 50,\n    maxPatternLength: 12,\n    minMatchCharLength: 1,\n    keys: c.head\n      .filter((column) => column.searchable !== false)\n      .map((column) => column.id),\n  });\n\n  c.paginationUpdate(c);\n\n  const filterContainer = document.getElementById(\"fuzzy_filters\");\n  if (!filterContainer) return;\n\n  const fieldsets = Array.from(filterContainer.querySelectorAll(\"fieldset\"));\n  const activeClasses = c.classes.filterButtonActive.trim().replace(/\\s+/g, \" \").split(\" \");\n\n  c.filters.forEach((filter, fIndex) => {\n    const fieldset = fieldsets[fIndex];\n    if (!fieldset) return;\n\n    filter.options.forEach((option, oIndex) => {\n      const button = fieldset.children[oIndex];\n      if (!button) return;\n\n      activeClasses.forEach((className) => {\n        if (option.active) {\n          button.classList.add(className);\n        } else {\n          button.classList.remove(className);\n        }\n      });\n    });\n  });\n}\n","import { elem } from \"./FuzzyTableHelper\";\n\n/**\n * Initializes and appends pagination navigation elements to a table container.\n * If the pagination navigation doesn't exist, it creates one and updates it.\n * \n * @param {Object} context - The context containing pagination details and classes for styling.\n * @param {HTMLElement} tableContainer - The container to which the pagination elements will be appended.\n */\nexport default function CreatePagination(context, tableContainer) {\n    if (!context.paginationNav) {\n        context.paginationNav = elem('nav', { id: 'paginationNav', className: context.classes.paginationNav || '' });\n        const tablePagination = elem('div', {\n            id: 'paginationContainer',\n            className: context.classes.tablePagination || ''\n        });\n        tablePagination.appendChild(context.paginationNav)\n        context.paginationDescription = elem('div', {\n            id: 'paginationDescription',\n            className: context.classes.paginationDescription || ''\n        });\n        tablePagination.appendChild(context.paginationDescription);\n        tableContainer.appendChild(tablePagination);\n    }\n\n    paginationUpdate(context);\n}\n\nexport function CreateTopPagination(context) {\n    if (!context.topPaginationNav) {\n      context.topPaginationNav = elem(\"nav\", {id: \"topPaginationNav\", className: context.classes.topPaginationNav || \"\"});\n    }\n    topPaginationUpdate(context);\n    return context.topPaginationNav;\n}\n  \n  /**\n   * Updates the top pagination navigation element with a left arrow (if applicable),\n   * a current page display, and a right arrow (if applicable).\n   *\n   * @param {Object} context - The context with table data, current page, and config info.\n   */\n  function topPaginationUpdate(context) {\n    const nav = context.topPaginationNav;\n    const totalPages = Math.ceil(context.table.length / context.size);\n    nav.innerHTML = \"\";\n    const fragment = document.createDocumentFragment();\n    if (context.currentPage > 0 && !context.paginationArrowButtonsDisabled) {\n      fragment.appendChild(createArrowElement(context, \"back\", \"top\"));\n    }\n    const currentDisplay = elem(\"span\", {\n      innerHTML: `${context.numberFormatter.format(context.currentPage + 1)} <span class=\"${context.classes.paginationTopSlash}\">${context.t?.of ?? '/'}</span> ${context.numberFormatter.format(totalPages)}`,\n      className: context.classes.topPaginationCurrent || \"\"\n    });\n    fragment.appendChild(currentDisplay);\n    if (context.currentPage < totalPages - 1 && !context.paginationArrowButtonsDisabled) {\n      fragment.appendChild(createArrowElement(context, \"forward\", \"top\"));\n    }\n    nav.appendChild(fragment);\n  }\n\n/**\n * Updates the pagination navigation based on the current context. It recalculates the pages to display\n * and refreshes the navigation bar accordingly.\n * @param {Object} context - The context with pagination data and configurations.\n */\nexport const paginationUpdate = (context) => {\n    const nav = context.paginationNav;\n    const totalPages = Math.ceil(context.table.length / context.size);\n    context.displayPages = calculateDisplayPages(context.currentPage, totalPages, 4);\n    nav.innerHTML = '';\n\n    const fragment = document.createDocumentFragment();\n\n    if (context.currentPage > 0 && !context.paginationArrowButtonsDisabled) {\n        fragment.appendChild(createArrowElement(context, 'back'));\n    }\n\n    for (const page of context.displayPages) {\n        fragment.appendChild(createPageElement(context, page));\n    }\n\n    if (context.currentPage < totalPages - 1 && !context.paginationArrowButtonsDisabled) {\n        fragment.appendChild(createArrowElement(context, 'forward'));\n    }\n\n    const { paginationDescriptionStart, paginationDescriptionEnd, paginationDescriptionTotal } = context.classes;\n\n    context.paginationDescription.innerHTML = `\n        ${context.t?.showing ?? ''} \n        <span class=\"${paginationDescriptionStart}\">${context.numberFormatter.format(context.currentPage * context.size + 1)}</span>\n        ${context.t?.to ?? '-'}\n        <span class=\"${paginationDescriptionEnd}\">${context.numberFormatter.format(Math.min((context.currentPage + 1) * context.size, context.table.length))}</span>\n        ${context.t?.of ?? '/'}\n        <span class=\"${paginationDescriptionTotal}\">${context.numberFormatter.format(context.table.length)}</span>\n        ${context.t?.entries ?? ''}\n    `;\n    topPaginationUpdate(context)\n    nav.appendChild(fragment);\n};\n\n/**\n * Creates an arrow element (back or forward) for pagination navigation.\n */\nfunction createArrowElement(context, direction, location = \"bottom\") {\n\n    const classes = (location == \"top\" ? context.classes.paginationTopArrow : [\n        context.classes.paginationButton, context.classes.paginationArrow || ''].join(' ')) \n\n    return elem('button', {\n        textContent: direction === 'back' ? '<' : '>',\n        className: classes,\n        onclick: () => {\n            context.currentPage += direction === 'back' ? -1 : 1;\n            context.updateTable();\n            paginationUpdate(context);\n        }\n    });\n}\n\n/**\n * Creates a single page element for pagination, which could be a number button or an ellipsis.\n * @param {Object} context - The context containing the current page and classes for styling.\n * @param {Number|String} page - The page number or an ellipsis ('...').\n * @returns {HTMLElement} The page element (either a span or a button).\n */\nfunction createPageElement(context, page) {\n    if (page === '...') {\n        return elem('span', {\n            textContent: '...',\n            className: context.classes.paginationButton\n        });\n    }\n\n    return elem('button', {\n        textContent: context.numberFormatter.format(page + 1),\n        className: [\n            context.classes.paginationButton,\n            context.currentPage === page ? context.classes.paginationButtonCurrent : ''\n        ].join(' '),\n        onclick: () => {\n            context.currentPage = page;\n            context.updateTable();\n            paginationUpdate(context);\n        }\n    });\n}\n\n/**\n * Calculates the page numbers to display in pagination. This includes handling '...' for skipped sections.\n * @param {Number} current - The current page index.\n * @param {Number} total - The total number of pages.\n * @param {Number} sides - The number of pages to show beside the current page.\n * @returns {Array} An array of page indices and ellipsis where appropriate.\n */\nfunction calculateDisplayPages(current, total, sides) {\n    const pages = [];\n    const start = Math.max(current - sides, 0);\n    const end = Math.min(current + sides, total - 1);\n\n    if (start > 1) {\n        pages.push(0, '...');\n    } else if (start === 1) {\n        pages.push(0);\n    }\n\n    for (let i = start; i <= end; i++) {\n        pages.push(i);\n    }\n\n    if (end < total - 2) {\n        pages.push('...', total - 1);\n    } else if (end === total - 2) {\n        pages.push(total - 1);\n    }\n\n    return pages;\n}","import { elem } from \"./FuzzyTableHelper\";\nimport paginationUpdate from './FuzzyTablePagination.js'\n\n/**\n * Creates a search input element for filtering table data. This search box dynamically filters the table\n * based on user input. If the search box is empty, it applies active filters from the context to the data.\n * If there is a search term, it uses Fuse.js to perform a fuzzy search and updates the table accordingly.\n *\n * @param {Object} context - The FuzzyTable context\n * @returns {HTMLInputElement} - The created search input element that is configured to filter the table data on input.\n */\n\nexport default function createSearchBox(context) {\n    const label = elem('label', { className: context.classes.searchWrapper });\n\n    const searchBox = elem('input', {\n        type: 'search',\n        id: 'fuzzy_search',\n        placeholder: context.t?.search_placeholder ?? 'Search',\n        className: context.classes.searchInput,\n    });\n    searchBox.oninput = () => {\n        const searchTerm = context.searchBox.value.trim().toLowerCase();\n    \n        if (searchTerm !== \"\") {\n            const fuseResults = context.fuse.search(searchTerm).slice(0, 100).map(item => item.item);\n            const substringMatches = context.data.filter(row =>\n                Object.values(row).some(value =>\n                    typeof value === 'string' && value.toLowerCase().includes(searchTerm)\n                )\n            );\n    \n            const uniqueResults = [\n                ...fuseResults,\n                ...substringMatches.filter(row => !fuseResults.includes(row))\n            ];\n    \n            context.table = uniqueResults;\n        } else {\n            let tempTable = context.data;\n    \n            for (const filter of context.filters) {\n                for (const option of filter.options.filter(option => option.active)) {\n                    tempTable = tempTable.filter((row) => {\n                        const match = option.value.test(row[filter.filterColumn]);\n                        option.active = true;\n                        return option.inverse ? !match : match;\n                    });\n                }\n            }\n    \n            context.table = tempTable;\n        }\n    \n        context.currentPage = 0;\n        context.updateTable();\n        paginationUpdate(context);\n    };\n    \n    context.searchBox = searchBox\n\n    const iconContainer = elem('span', {\n        className: context.classes.searchIcon,\n        innerHTML: `\n            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" class=\"icon\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"m21 21-5.197-5.197m0 0A7.5 7.5 0 1 0 5.196 5.196a7.5 7.5 0 0 0 10.607 10.607Z\" />\n            </svg>`\n    });\n\n    label.append(iconContainer, searchBox);\n    context.searchBox = searchBox;\n\n    return label;\n}","import { elem } from './FuzzyTableHelper.js';\n\n/**\n * Creates a UI component for downloading data in JSON, TSV, CSV, or Excel format.\n * This component toggles a table download filetype options dropdown.\n * @param {Object} context - The context object for passed in options\n * @returns {HTMLElement} - The details HTMLElement for the downloads\n */\nexport default function createDownloadUI(context) {\n    const details = elem('details', {id: 'fuzzy_download_details', className: context.classes.downloadWrapper});\n    const summary = elem('summary', {className: context.classes.downloadButton});\n  \n    const icon = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    icon.setAttribute('fill', 'none');\n    icon.setAttribute('viewBox', '0 0 24 24');\n    icon.setAttribute('stroke-width', '1.5');\n    icon.setAttribute('stroke', 'currentColor');\n    icon.setAttribute('class', 'w-6 h-6');\n    icon.innerHTML = '<path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M3 16.5v2.25A2.25 2.25 0 005.25 21h13.5A2.25 2.25 0 0021 18.75V16.5M16.5 12L12 16.5m0 0L7.5 12m4.5 4.5V3\" />';\n    summary.appendChild(icon);\n  \n    const dropdown = elem('div', {\n      className: context.classes.downloadDropdown,\n      innerHTML: `<p class=\"${context.classes.downloadDropdownInfo}\">(Download current filtered dataset)</p>`\n    });\n  \n    for (const type of ['CSV', 'Excel', 'TSV', 'JSON']) {\n      const button = elem('button', {\n        className: context.classes.downloadDropdownButton,\n        textContent: type,\n        onclick: () => downloadData(context.table, type)\n      });\n      dropdown.appendChild(button);\n    }\n  \n    details.appendChild(summary);\n    details.appendChild(dropdown);\n  \n    document.addEventListener('click', (event) => {\n      if (!details.contains(event.target) && details.hasAttribute('open')) {\n        details.removeAttribute('open');\n      }\n    });\n  \n    return details;\n}\n\n/**\n * Triggers a download of the table data in JSON, TSV, CSV, or Excel format.\n * This function creates a Blob from the data and uses a temporary download link to initiate the download.\n *\n * @param {Array} data - The array of data objects to be downloaded.\n * @param {string} type - The type of file to generate: \"JSON\", \"TSV\", \"CSV\", or \"Excel\"\n */\nfunction downloadData(data, type) {\n\n    const convertArrayToSeparatedValues = (data, separator) => {\n        const headings = Object.keys(data[0]).join(separator);\n        const rows = data\n            .map(row => Object.values(row).join(separator))\n            .join('\\n');\n        return `${headings}\\n${rows}`;\n    };\n\n    const convertArrayToTable = (data) => {\n        let table = '<table border=\"1\"><thead><tr>';\n        Object.keys(data[0]).forEach(key => {\n            table += `<th>${key}</th>`;\n        });\n        table += '</tr></thead><tbody>';\n        data.forEach(row => {\n            table += '<tr>';\n            Object.values(row).forEach(value => {\n                table += `<td>${value}</td>`;\n            });\n            table += '</tr>';\n        });\n        table += '</tbody></table>';\n        return table;\n    };\n\n    let fileType;\n    let fileName;\n    let fileContent;\n\n    switch (type) {\n        case 'TSV':\n            fileType = 'text/tab-separated-values';\n            fileName = 'data.tsv';\n            fileContent = convertArrayToSeparatedValues(data, '\\t');\n            break;\n        case 'CSV':\n            fileType = 'text/csv';\n            fileName = 'data.csv';\n            fileContent = convertArrayToSeparatedValues(data, ',');\n            break;\n        case 'Excel':\n            fileType = 'application/vnd.ms-excel';\n            fileName = 'data.xls';\n            const tableHtml = convertArrayToTable(data);\n            fileContent = `\n<html xmlns:o=\"urn:schemas-microsoft-com:office:office\"\n      xmlns:x=\"urn:schemas-microsoft-com:office:excel\"\n      xmlns=\"http://www.w3.org/TR/REC-html40\">\n<head>\n    <meta charset=\"UTF-8\">\n    <!--[if gte mso 9]>\n    <xml>\n        <x:ExcelWorkbook>\n            <x:ExcelWorksheets>\n                <x:ExcelWorksheet>\n                    <x:Name>Sheet1</x:Name>\n                    <x:WorksheetOptions>\n                        <x:DisplayGridlines/>\n                    </x:WorksheetOptions>\n                </x:ExcelWorksheet>\n            </x:ExcelWorksheets>\n        </x:ExcelWorkbook>\n    </xml>\n    <![endif]-->\n</head>\n<body>\n    ${tableHtml}\n</body>\n</html>`;\n            break;\n        default:\n            fileType = 'application/json';\n            fileName = 'data.json';\n            fileContent = JSON.stringify(data, null, 2);\n            break;\n    }\n\n    const blob = new Blob([fileContent], { type: fileType });\n    const link = document.createElement('a');\n    link.download = fileName;\n    link.href = URL.createObjectURL(blob);\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n}","import { elem } from \"./FuzzyTableHelper\";\n\n/**\n * Creates a dropdown selector for choosing the pagination size in a table. This selector allows users to\n * change how many table rows are displayed per page. The function dynamically creates a select element with\n * options that reflect the possible page sizes defined in the context. It also handles the change event to\n * update the table's pagination size and refreshes the table view accordingly.\n *\n * @param {Object} context - The context for FuzzyTable\n * @returns {HTMLElement} - The container div element that includes the size selector and its label.\n */\nexport default function createSizeSelector(context) {\n    const sizeSelectContainer = elem('div', { className: context.classes.sizeSelectContainer ?? ''});\n  \n    const label = elem('label', { htmlFor: 'fuzzy_size_select', className: 'sr-only', textContent: 'Select Page Size'});\n    sizeSelectContainer.appendChild(label);\n  \n    const select = elem('select', {id: 'fuzzy_size_select',className: context.classes.sizeSelect || ''});\n    sizeSelectContainer.appendChild(select);\n  \n    const numberFormatter = new Intl.NumberFormat(context.locale);\n    for (const pageSize of context.pageSizes) {\n      const option = elem('option', {\n        value: pageSize,\n        textContent: numberFormatter.format(pageSize)\n      });\n      if (pageSize === context.size) {\n        option.selected = true;\n      }\n      select.appendChild(option);\n    }\n  \n    select.value = context.size;\n    select.addEventListener('change', (e) => {\n      context.size = e.target.value;\n      context.currentPage = 0;\n      context.paginationUpdate();\n      context.updateTable();\n    });\n  \n    return sizeSelectContainer;\n}\n","import Fuse from './Fuse.js'\nimport { sort } from './FuzzyTableSort.js'\nimport { createTbody } from './FuzzyTableBody.js'\nimport { mergeClasses } from './FuzzyTableStyles.js'\nimport {createFilters, applyFilters} from './FuzzyTableFilters.js'\nimport createSearchBox from './FuzzyTableSearch.js'\nimport createDownloadUI from './FuzzyTableDownloader.js'\nimport CreatePagination, {paginationUpdate as pUpdate, CreateTopPagination} from './FuzzyTablePagination.js'\nimport createSizeSelector from './FuzzyTableSizeSelect.js'\n\nexport default class FuzzyTable {\n    constructor(containerId, data, head, options) {\n        this.container = document.getElementById(containerId);\n        if(data) {\n            this.data = [...data];\n            this.table = [...data];\n        } else {\n            this.data = [...JSON.parse(this.container.dataset.rows)];\n            this.table = [...JSON.parse(this.container.dataset.rows)];\n        }\n\n        this.searchBox;\n        this.query =  '';\n        this.sortedCol = '';\n        this.filters = options.filters ?? [];\n        this.head = head;\n\n        if(head) {\n            this.head = head;\n        } else {\n            this.head = [...JSON.parse(this.container.dataset.head)];\n        }\n\n        this.filteredTable = [];\n        this.size = (options.pageSize ?? this.container?.dataset?.pageSize) ?? 100;\n        this.currentPage = 0;\n        this.numberCol = options.numberCol ?? false;\n        this.pageSizes = (options.pageSizes ?? this.container?.dataset?.pageSizes) ?? [50, 100, 250, 1000, 5000];\n        this.paginationArrowButtonsDisabled = options?.paginationArrowButtonsDisabled\n        this.classes = mergeClasses(options.classes);\n        this.aside = (options.aside ?? this.container?.dataset?.aside);\n        this.checkMark = (options?.checkMark ?? this.container?.dataset?.checkMark) ?? '✓'\n        this.xMark = (options?.xMark ?? this.container?.dataset?.xMark) ?? '✗'\n        this.locale = options.locale ?? 'en'\n        this.numberFormatter = new Intl.NumberFormat(this.locale);\n        this.t = options.t ?? {search_placeholder: 'Search'}\n        this.vernacularNumerals = options.vernacularNumerals ?? true;\n        this.fuse = new Fuse(this.table, {\n            shouldSort: true,\n            includeMatches: true,\n            threshold: 0.15,\n            location: 0,\n            distance: 120,\n            maxPatternLength: 12,\n            minMatchCharLength: 1,\n            useExtendedSearch: true,\n            keys: this.head.filter(column => column.searchable !== false).map(column => column.id)\n        })\n        this.render();\n    }\n\n    setData(newData) {\n        this.update(() => {\n            this.data = newData;\n            this.table = newData;\n            this.filteredTable = newData.filter(() => true);\n        });\n    }\n\n    render = () => {\n        this.container.innerHTML = '';\n        createFilters(this)\n        const tableContainer = document.createElement('div');\n        tableContainer.className = this.classes.tableContainer\n\n        const tableHeader = document.createElement('div')\n        tableHeader.className = this.classes.tableHeader\n\n        tableHeader.appendChild(createSearchBox(this))\n        tableHeader.appendChild(CreateTopPagination(this))\n        tableHeader.appendChild(createDownloadUI(this))\n        tableHeader.appendChild(createSizeSelector(this))\n\n        const table = document.createElement('table');\n        table.className = this.classes.table;\n    \n        const thead = document.createElement('thead');\n        if(this.classes.thead) {\n            thead.className = this.classes.thead;\n        }\n\n        if (this.numberCol) {\n            const numTh = document.createElement('th');\n            numTh.className = `${this.classes.th ?? ''} number-column`;\n            numTh.textContent = '#'; // Column header for numbering\n            thead.appendChild(numTh);\n        }\n\n        for (const column of this.head) {\n            const th = document.createElement('th');\n            th.className = `${this.classes.th ?? ''} ${column.class ?? ''}`;\n            th.innerHTML = column.name;\n            const arrowUp = document.createElement('span');\n            const arrowDown = document.createElement('span');\n            arrowUp.className = this.classes.arrowUp;\n            arrowDown.className = this.classes.arrowDown;\n            arrowUp.textContent = '▲';\n            arrowDown.textContent = '▼';\n            arrowUp.style.opacity = (column.sortDir == \"ascending\") ? 1 : 0.35;\n            arrowDown.style.opacity = (column.sortDir == \"descending\") ? 1 : 0.35;\n        \n            th.appendChild(arrowUp);\n            th.appendChild(arrowDown);\n        \n            th.addEventListener('click', () => {\n                for (const arrow of document.querySelectorAll('th span')) {\n                    arrow.style.opacity = 0.35;\n                }\n                const isAscending = th.classList.toggle('ascending');\n                if (isAscending) {\n                    arrowUp.style.opacity = 1;\n                    arrowDown.style.opacity = 0.35;\n                } else {\n                    arrowDown.style.opacity = 1;\n                    arrowUp.style.opacity = 0.35;\n                }\n                this.table = sort(this, column);\n                this.updateTable();\n            });\n        \n            thead.appendChild(th);\n        }\n        \n        table.appendChild(thead);\n        const tbody = document.createElement('tbody');\n        tbody.id = \"fuzzy-rows\";\n        if(this.classes.tbody) {\n            tbody.className = this.classes.tbody;\n        }\n        \n        createTbody(this, tbody);\n        table.appendChild(tbody);\n\n        tableContainer.appendChild(tableHeader)\n        tableContainer.appendChild(table);\n        CreatePagination(this, tableContainer)\n        this.container.append(tableContainer);\n        this.filters.forEach((filter, filterKey) => {\n            filter.options.forEach((option, optionKey) => {\n                if (option.active) {\n                    applyFilters(this, filterKey, optionKey);\n                }\n            });\n        });\n    }\n\n    safeHtml = (html) => {\n        const tempDiv = document.createElement('div');\n        tempDiv.innerHTML = html;\n    \n        for (const tag of ['script', 'iframe', 'link', 'style', 'object', 'embed']) {\n            const nodes = tempDiv.getElementsByTagName(tag);\n            for (let i = nodes.length - 1; i >= 0; i--) {\n                nodes[i].parentNode.removeChild(nodes[i]);\n            }\n        }\n    \n        return tempDiv.firstChild;\n    }\n\n    paginationUpdate = () => pUpdate(this)\n    updateTable = () => createTbody(this, document.getElementById('fuzzy-rows'))\n}"],"names":["isArray","value","Array","getTag","INFINITY","baseToString","result","toString","isString","isNumber","isBoolean","isObjectLike","isObject","isDefined","undefined","isBlank","trim","length","Object","prototype","call","EXTENDED_SEARCH_UNAVAILABLE","INCORRECT_INDEX_TYPE","LOGICAL_SEARCH_INVALID_QUERY_FOR_KEY","key","PATTERN_LENGTH_TOO_LARGE","max","MISSING_KEY_PROPERTY","name","INVALID_KEY_WEIGHT_VALUE","hasOwn","hasOwnProperty","KeyStore","constructor","keys","this","_keys","_keyMap","totalWeight","obj","createKey","push","id","weight","get","keyId","toJSON","JSON","stringify","path","src","getFn","createKeyPath","createKeyId","Error","split","join","list","arr","deepGet","index","i","len","MatchOptions","includeMatches","findAllMatches","minMatchCharLength","BasicOptions","isCaseSensitive","includeScore","shouldSort","sortFn","a","b","score","idx","FuzzyOptions","location","threshold","distance","AdvancedOptions","useExtendedSearch","ignoreLocation","ignoreFieldNorm","fieldNormWeight","Config","SPACE","norm","mantissa","cache","Map","m","numTokens","match","has","n","Number","parseFloat","Math","round","set","clear","FuseIndex","isCreated","setIndexRecords","setSources","docs","records","setKeys","_keysMap","forEach","create","doc","docIndex","_addString","_addObject","add","size","removeAt","splice","getValueForItemAtKeyId","item","record","v","$","keyIndex","subRecords","stack","nestedArrIndex","pop","subRecord","k","createIndex","myIndex","map","parseIndex","data","computeScore$1","pattern","errors","currentLocation","expectedLocation","accuracy","proximity","abs","convertMaskToIndices","matchmask","indices","start","end","MAX_BITS","search","text","patternAlphabet","patternLen","textLen","min","currentThreshold","bestLocation","computeMatches","matchMask","indexOf","lastBitArr","finalScore","binMax","mask","binMin","binMid","floor","finish","bitArr","j","charMatch","charAt","isMatch","createPatternAlphabet","char","BitapSearch","options","toLowerCase","chunks","addChunk","startIndex","alphabet","remainder","substr","searchIn","allIndices","totalScore","hasMatches","BaseMatch","isMultiMatch","getMatch","multiRegex","isSingleMatch","singleRegex","exp","matches","ExactMatch","super","type","InverseExactMatch","PrefixExactMatch","startsWith","InversePrefixExactMatch","SuffixExactMatch","endsWith","InverseSuffixExactMatch","FuzzyMatch","_bitapSearch","IncludeMatch","searchers","searchersLen","SPACE_RE","OR_TOKEN","parseQuery","query","filter","results","queryItem","found","searcher","token","MultiMatchSet","Set","ExtendedSearch","condition","_","numMatches","qLen","pLen","registeredSearchers","register","args","createSearcher","searcherClass","LogicalOperator","AND","OR","KeyType","PATH","PATTERN","isExpression","isPath","isLeaf","convertToExplicit","parse","auto","next","isQueryPath","node","children","operator","computeScore","pow","EPSILON","transformMatches","refIndex","transformScore","format","transformers","transformer","Fuse","_keyStore","setCollection","_docs","_myIndex","remove","predicate","getIndex","limit","_searchStringList","_searchObjectList","_searchLogical","sort","slice","expression","evaluate","_findMatches","res","child","resultMap","expResults","version","config","context","column","isDescending","sortedCol","table","valA","Infinity","valB","current","localeCompare","createTbody","tbody","calculateRange","page","currentPage","tableSlice","innerHTML","rowIndex","row","tr","document","createElement","className","classes","numberCol","numTd","tableColumn","textContent","appendChild","head","td","class","setAttribute","cellValue","formattedValue","formatCellContent","locale","content","DocumentFragment","icon","createSVG","img","createImg","createTextNode","subtitle","tableCellSubtitle","innerText","link","tableCellLink","href","base","target","suffix","safeHtml","hideZeros","classList","svg","createElementNS","use","setAttributeNS","imgEl","ext","Intl","NumberFormat","date","Date","DateTimeFormat","year","checkMark","xMark","defaultClasses","pagination","sortArrow","arrowUp","arrowDown","paginationButton","paginationButtonCurrent","paginationNav","paginationDescription","paginationDescriptionStart","paginationDescriptionEnd","paginationDescriptionTotal","paginationTopArrow","paginationTopSlash","topPaginationNav","topPaginationCurrent","downloadWrapper","downloadButton","downloadDropdown","downloadDropdownButton","downloadDropdownInfo","fieldsetWrap","fieldsetFilterWrap","fieldset","filterContainer","filterButton","filterButtonActive","tableContainer","searchInput","searchIcon","searchWrapper","sizeSelectContainer","sizeSelect","tableHeader","thead","th","mergeClasses","customClasses","mergedClasses","substring","elem","tag","props","el","val","entries","assign","style","createFilters","aside","asideContainer","container","filters","filterKey","filterName","createFilterFieldset","applyFilters","createFilterButton","option","onClick","filterFragment","createDocumentFragment","code","title","buttonEl","active","onclick","optionKey","button","c","tempTable","values","filterType","activeOptions","opt","test","filterColumn","inverse","updateTable","fuse","maxPatternLength","searchable","paginationUpdate","getElementById","fieldsets","from","querySelectorAll","activeClasses","replace","fIndex","oIndex","CreatePagination","tablePagination","CreateTopPagination","topPaginationUpdate","nav","totalPages","ceil","fragment","paginationArrowButtonsDisabled","createArrowElement","currentDisplay","numberFormatter","t","of","displayPages","calculateDisplayPages","createPageElement","showing","to","direction","paginationArrow","total","sides","pages","createSearchBox","label","searchBox","placeholder","search_placeholder","oninput","searchTerm","fuseResults","substringMatches","some","includes","uniqueResults","iconContainer","append","createDownloadUI","details","summary","dropdown","downloadData","addEventListener","event","contains","hasAttribute","removeAttribute","convertArrayToSeparatedValues","separator","headings","rows","convertArrayToTable","fileType","fileName","fileContent","tableHtml","blob","Blob","download","URL","createObjectURL","body","click","removeChild","createSizeSelector","htmlFor","select","pageSize","pageSizes","selected","e","FuzzyTable","containerId","dataset","filteredTable","vernacularNumerals","render","setData","newData","update","numTh","opacity","sortDir","arrow","isAscending","toggle","html","tempDiv","nodes","getElementsByTagName","parentNode","firstChild","pUpdate"],"mappings":"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"}